flowchart TD
    %% -------------------
    %% Node Definitions
    %% -------------------

    subgraph "User Interfaces"
        style UIs fill:#D5E8D4,stroke:#82B366,color:#333,stroke-width:2px
        U("fa:fa-user User"):::uiStyle
        FE("fa:fa-window-maximize Next.js Frontend"):::uiStyle
        DASH("fa:fa-tachometer-alt Article Generation Dashboard"):::uiStyle
    end

    subgraph "Application Backends"
        style Backends fill:#DAE8FC,stroke:#6C8EBF,color:#333,stroke-width:2px
        API("fa:fa-cloud FastAPI Backend"):::backendStyle
        RAG("fa:fa-brain Langchain RAG Orchestrator"):::backendStyle
        LLM("fa:fa-robot LLM (e.g., Gemini Pro)"):::backendStyle
        GEN_API("fa:fa-cloud-arrow-up Generation/Translation Service"):::backendStyle
        TRANSLATE("fa:fa-language Translation Service"):::backendStyle
    end

    subgraph "Content Ingestion & Processing"
        style Ingestion fill:#FFE6CC,stroke:#D79B00,color:#333,stroke-width:2px
        SYNC("fa:fa-sync-alt Content Sync Service"):::ingestionStyle
        PROC("fa:fa-cogs Embedding Processor"):::ingestionStyle
        CHUNK("fa:fa-vector-square Hierarchical Chunking & Embedding"):::ingestionStyle
    end

    subgraph "Content Management System (Payload)"
        style CMS fill:#E6E0F8,stroke:#A094C4,color:#333,stroke-width:2px
        CREATORS("fa:fa-users Content Creators / Translators"):::cmsStyle
        ADMIN("fa:fa-desktop Payload Admin Panel"):::cmsStyle
        PAYLOAD_DB("fa:fa-database Payload DB (MongoDB)"):::cmsStyle
        HOOK("fa:fa-bell Payload 'afterChange' Hook"):::cmsStyle
        PAYLOAD_API("fa:fa-code Payload REST/GraphQL API"):::cmsStyle
    end

    subgraph "Data Stores"
        style Storage fill:#F8CECC,stroke:#B85450,color:#333,stroke-width:2px
        VDB("fa:fa-layer-group Vector Store (MongoDB Atlas)"):::storageStyle
    end

    %% -------------------
    %% Connection Definitions
    %% -------------------

    %% Flow 1: AI Content Generation & Translation
    CREATORS -- "1 Use Dashboard for AI Generation" --> DASH
    DASH -- "2 Sends API request" --> GEN_API
    GEN_API -- "3 Prompts LLM for article" --> LLM
    LLM -- "4 Returns structured article" --> GEN_API
    GEN_API -- "5a Sends to Translation Service" --> TRANSLATE
    TRANSLATE -- "5b Returns translations" --> GEN_API
    GEN_API -- "6 Returns generated/translated drafts" --> DASH
    DASH -- "7 Saves drafts to Payload" --> PAYLOAD_API

    %% Flow 2: Content Publishing & Ingestion Trigger
    CREATORS -- "8 Review & Publish in" --> ADMIN
    ADMIN -- "Saves to" --> PAYLOAD_DB
    ADMIN -- "On Publish/Update/Delete" --> HOOK
    PAYLOAD_API -- "Updates" --> PAYLOAD_DB
    HOOK -- "Triggers Sync Service (INTEGRATION POINT)" --> SYNC
    SYNC -- "Fetches full content via" --> PAYLOAD_API
    PAYLOAD_API -- "Returns Content" --> SYNC
    SYNC -- "Sends to Processor" --> PROC
    PROC -- "Parses & Chunks" --> CHUNK
    CHUNK -- "Embeds (text-embedding-004) & Stores" --> VDB

    %% Flow 3: User Query & RAG
    U -- "Submits Query" --> FE
    FE -- "Sends API Request" --> API
    API -- "Forwards to" --> RAG
    RAG -- "1 Embeds Query & Performs Vector Search" --> VDB
    VDB -- "2 Returns Relevant Context" --> RAG
    RAG -- "3 Constructs Prompt w/ Context" --> LLM
    LLM -- "4 Generates Response" --> RAG
    RAG -- "5 Returns Structured Answer" --> API
    API -- "Streams Response" --> FE
    FE -- "Displays Answer" --> U


    %% -------------------
    %% Class-Based Styling
    %% -------------------
    classDef uiStyle fill:#D5E8D4,stroke:#333,color:#333
    classDef backendStyle fill:#DAE8FC,stroke:#333,color:#333
    classDef ingestionStyle fill:#FFE6CC,stroke:#333,color:#333
    classDef cmsStyle fill:#E6E0F8,stroke:#333,color:#333
    classDef storageStyle fill:#F8CECC,stroke:#333,color:#333